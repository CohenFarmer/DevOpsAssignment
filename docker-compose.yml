services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks: [internal]

  backend:
    build: ./server
    container_name: backend
    restart: unless-stopped
    environment:
      ATLAS_URI: ${ATLAS_URI}
      PORT: 5000
    depends_on: [mongo]
    expose:
      - "5000"
    networks: [internal]

  frontend:
    build: ./client
    container_name: frontend
    restart: unless-stopped
    expose:
      - "80"
    networks: [internal]

  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: unless-stopped
    depends_on: [mongo]
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${ATLAS_URI}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_SITE_BASEURL: /db
    expose:
      - "8081"
    networks: [internal]

  reverse-proxy:
    image: nginx:1.27-alpine
    container_name: reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./reverse-proxy/certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
      - mongo-express
    networks: [internal]

networks:
  internal:
    driver: bridge

volumes:
  mongo-data:
